---
- hosts: all

  remote_user: vagrant
  sudo: True

  vars:
    oracle_repository: /home/angelo/vagrantVM/repo/Software/oracle
    domainname: SitesDomain
    domainpath: /opt/oracle/weblogic/user_projects/domains
    # domainadminmanager: "{{ ansible_eth0.ipv4.address }}"
    domainadminmanager: ""
    domainport: 7001
    domainwlsjar: /opt/oracle/weblogic/wlserver_10.3/common/templates/domains/wls.jar
    dbusername: weblogic
    dbpassword: weblogic
    writedomain: /opt/oracle/weblogic/user_projects/domains/SitesDomain

    wlsinstalldir: "/opt/oracle/weblogic/wlserver_10.3"
    weblogicuserhome: "/home/weblogic"

  tasks:

  - name: Template file silentconf.xml for domain
    template: src=../files/silentconf.xml_TEMPLATE dest={{ weblogicuserhome }}/silentconf.xml backup=yes
  - file: path={{ weblogicuserhome }}/silentconf.xml owner=weblogic group=weblogic mode=0755

  - name: if dir does not exist (so not to rerun this script) set in silentconf.xml and vars
    stat: path={{ domainpath }}/{{ domainname }}
    register: found_dir_domaincreated

  - name: Check if WebLogic is NOT running, to create a domain
    shell: /usr/bin/pgrep -f "weblogic.Server" | true
    register: weblogic_is_running
    ignore_errors: true

  - name: Creating the domain
    shell: " sudo su - weblogic -c 'sh  {{ wlsinstalldir }}/common/bin/config.sh -mode=silent -silent_script=silentconf.xml -log=createdomain.log ' "
    when: found_dir_domaincreated.stat.exists == false and weblogic_is_running.stdout == "" 

  - name: Check content of createdomain.log
    shell: grep "Domain Generation Successful" {{ weblogicuserhome }}/createdomain.log
    register: createdomain_log_file
  - name: check if createdomain log contains "Domain Generation Successful"
    fail: msg="domain not created - ERROR {{ createdomain_log_file }}"
    when: not createdomain_log_file.stdout.find("Domain Generation Successful")
